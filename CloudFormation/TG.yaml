#vpc-0ec0fe960b0e7d908
#subnet-018dae2df3b0e7c64  private 1a
#subnet-0146e0bfe03130d1f  private 1b
#subnet-0501555ea2906aa31  public 1a
#subnet-0bb80f94ad675dd2d  public 1b
#sg-01259517a41e01f04 BE
#ami-08437916891c56642 BE AMI
#key

Resources:
  #-------------------------------------------------------------
  ALBSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Open Ports 80 to internet
        VpcId: vpc-0ec0fe960b0e7d908
        SecurityGroupIngress:
        - Description: Allow HTTP
          IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - Description: Allow HTTP
          IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIpv6: ::/0
          
        #SecurityGroupIngress:
        #- IpProtocol: tcp
        #  FromPort: '80'
        #  ToPort: '80'
        #  CidrIp: 0.0.0.0/0
        Tags:
          - Key: Name
            Value: "ALB-SEG-CF"
  #-------------------------------------------------------------
  TargetGroup: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      #HealthCheckEnabled: True
      #HealthCheckProtocol: HTTP
      #HealthCheckPort: 5000
      #UnhealthyThresholdCount: 2
      #HealthyThresholdCount: 5
      #HealthCheckIntervalSeconds: 30
      #HealthCheckTimeoutSeconds: 5
      #HealthCheckPath: /
      #Matcher:
      #  HttpCode: "204"
      Name: Bahram-TG
      Port: 5000
      Protocol: HTTP
      #Tags:
      #- Key: Name
      #  Value: 'rrrrrr'
      #- Key: Port
      #  Value: 80

      #TargetType: String
      VpcId: vpc-0ec0fe960b0e7d908
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '30'
      Targets:
      - Id: i-03c45872f49cc9333
        Port: 5000
  #------------------------------------------------------------- ELB (ALB)
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      LoadBalancerArn:
          Ref: ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing # or internal
      Subnets: [subnet-0501555ea2906aa31,subnet-0bb80f94ad675dd2d] 
      #- Ref: PubSubnetZoneA
      #- Ref: PubSubnetZoneB
      SecurityGroups:
      - Ref: ALBSecurityGroup    
